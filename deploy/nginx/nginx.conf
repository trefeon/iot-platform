user  nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events { worker_connections 1024; }

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout 65;

  # Map for upstream routing
  map $http_host $upstream_app {
    default        api:8000;     # demo/control fallback to API
  }

  server {
    listen 80;
    server_name _;
    
    # Cloudflare sends real client IP headers
    set_real_ip_from 0.0.0.0/0;
    real_ip_header CF-Connecting-IP;

    # --- Grafana public (read-only) ---
    location /grafana/ {
      proxy_pass http://grafana:3000/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # Rewrite URLs for Grafana subpath
      sub_filter_once off;
      sub_filter 'href="/' 'href="/grafana/';
      sub_filter 'src="/'  'src="/grafana/';
      sub_filter '"url":"/' '"url":"/grafana/';
      sub_filter_types *;
    }

    # --- MQTT over WebSockets (browser clients) ---
    location /mqtt {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://broker:9001;  # Mosquitto WS listener
      proxy_connect_timeout 7d;
      proxy_send_timeout 7d;
      proxy_read_timeout 7d;
    }

    # --- Health check endpoint ---
    location /health {
      proxy_pass http://api:8000/health;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
    }

    # --- API & everything else ---
    location / {
      proxy_pass http://api:8000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header CF-Access-Jwt-Assertion $http_cf_access_jwt_assertion; # Forward Access JWT
    }
  }
}
