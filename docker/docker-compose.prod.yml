services:
  db:
    build: ./services/db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./services/db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  broker:
    image: eclipse-mosquitto:2
    ports:
      - "8883:8883"  # TLS port for production
    volumes:
      - ./services/broker/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./services/broker/aclfile:/mosquitto/config/aclfile
      - ./services/broker/passwd:/mosquitto/config/passwd
      - ./deploy/certs:/mosquitto/config/certs
      - broker_data:/mosquitto/data
      - broker_log:/mosquitto/log
    restart: unless-stopped

  api:
    build: ./services/api
    env_file: .env
    environment:
      - CF_ACCESS_CERTS=${CF_ACCESS_CERTS}
      - CF_ACCESS_AUD=${CF_ACCESS_AUD}
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_started
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - api
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/certs:/etc/nginx/certs:ro
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.55.1
    volumes:
      - ./services/observability/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.1.4
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SERVER_DOMAIN=${DOMAIN}
      - GF_SERVER_ROOT_URL=https://${DOMAIN}/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

volumes:
  db_data:
  broker_data:
  broker_log:
  grafana_data:
  prometheus_data:
