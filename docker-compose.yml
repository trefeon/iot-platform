version: "3.9"
services:
  db:
    build: ./services/db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./services/db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  broker:
    image: eclipse-mosquitto:2
    env_file: .env
    ports:
      - "1883:1883"
      # - "8883:8883"  # enable for TLS
    volumes:
      - ./services/broker/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./services/broker/aclfile:/mosquitto/config/aclfile
      - ./services/broker/passwd:/mosquitto/config/passwd
      - broker_data:/mosquitto/data
      - broker_log:/mosquitto/log
    command: >
      sh -lc 'if [ ! -s /mosquitto/config/passwd ]; then
                mosquitto_passwd -b -c /mosquitto/config/passwd "${MQTT_USER:-devuser}" "${MQTT_PASSWORD:-devpass}";
              fi;
              exec /usr/sbin/mosquitto -c /mosquitto/config/mosquitto.conf'

  api:
    build: ./services/api
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_started
    ports:
      - "${API_PORT}:8000"

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - api
    ports:
      - "${NGINX_HTTP_PORT}:80"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  prometheus:
    image: prom/prometheus:v2.55.1
    volumes:
      - ./services/observability/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:11.1.4
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  db_data:
  broker_data:
  broker_log:
  grafana_data:
