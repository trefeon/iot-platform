services:
  db:
    build: ./services/db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  broker:
    image: eclipse-mosquitto:2
    env_file: .env
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - broker_data:/mosquitto/data
      - broker_log:/mosquitto/log
    restart: unless-stopped

  api:
    build: ./services/api
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_started
    ports:
      - "${API_PORT}:8000"

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - api
    ports:
      - "${NGINX_HTTP_PORT}:80"

  prometheus:
    image: prom/prometheus:v2.55.1
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus

  grafana:
    image: grafana:11.1.4
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  db_data:
  broker_data:
  broker_log:
  prometheus_data:
  grafana_data:
